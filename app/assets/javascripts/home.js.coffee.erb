# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

#= require application
#= require hmd/dist/hmd-0.2.8.1

privlock.editCommentForm = (writingId, commentId, isAdmin, lastUpdatedTimestamp, content) ->
  formHTML = "<form class='edit_comment form-horizontal' method='post' data-remote='true'
                action='/writings/" + writingId + "/comments/" + commentId + "' accept-charset='UTF-8'>
                <div style='margin:0;padding:0;display:inline'>
                  <input type='hidden' value='✓' name='utf8'>
                  <input type='hidden' value='patch' name='_method'>
                </div>
                <div class='form-group'>"

  unless isAdmin
    formHTML  += "<label for='comment_password' class='sr-only'>password (*)</label>
                  <div class='col-md-3 col-xs-10'>
                    <input id='comment_password' type='password' name='comment[password]' class='form-control input-sm' placeholder='Password'>
                  </div>"

  formHTML + "<input id='last_updated_timestamp' type='hidden' value='" + lastUpdatedTimestamp + "' name='last_updated_timestamp'>
                <div class='col-md-12 col-xs-12'>
                  <textarea id='comment_content' name='comment[content]' class='form-control input-sm' rows='3'>" + content + "</textarea>
                </div>
                <div class='col-md-3  col-xs-10'>
                  <input type='submit' value='Update' name='commit' class='btn btn-primary btn-sm'>
                </div>
              </div>
            </form>"

privlock.deleteCommentForm = (writingId, commentId, isAdmin, lastUpdatedTimestamp) ->
  formHTML = "<form class='delete_comment form-inline' method='post' data-remote='true'
                action='/writings/" + writingId + "/comments/" + commentId + "' accept-charset='UTF-8'>
                <div style='margin:0;padding:0;display:inline'>
                  <input type='hidden' value='✓' name='utf8'>
                  <input type='hidden' value='delete' name='_method'>
                </div>"

  if isAdmin
    formHTML  += "<div>Are you sure?</div>"
  else
    formHTML  += "<div class='form-group'>
                    <label for='comment_password' class='sr-only'>password</label>
                    <input id='comment_password' type='password' name='comment[password]' class='form-control input-sm' placeholder='password'>
                  </div>"

  formHTML + "<input id='last_updated_timestamp' type='hidden' value='" + lastUpdatedTimestamp + "' name='last_updated_timestamp'>
              <input type='submit' value='Delete' name='commit' class='btn btn-warning btn-sm'>
            </form>"


privlock.onReadyDocument = ->
  <% if Rails.env.production? %>
  $(".contents").on 'click', '.writings_list .writing .title a', ->
    id = $(this).closest('.writing').attr('id').slice('writing_'.length)
    ga 'send',
      'hitType':       'event',
      'eventCategory': 'button',
      'eventAction':   'click',
      'eventLabel':    'nav buttons',
      'eventValue':    4

  <% end %>

  hideChildCategoryTimeout = null

  $(".parent_categories .category").mouseenter (event) ->
    if hideChildCategoryTimeout != null
      clearTimeout(hideChildCategoryTimeout)
    privlock.displayOne('.child_categories', "#category_"+$(this).attr("id").slice(9)+"_child_categories")

  $(".header").mouseleave (event) ->
    hideChildCategoryTimeout = setTimeout ->
      $(".child_categories").not("not_displayed").addClass "not_displayed"
    , 1000

  $(".comments_count").click (event) ->
    commentContainer = $(this).closest('.writing').find('.comments')
    writingId = $(this).closest(".writing").attr("id").slice(8)
    url       = "/writings/" + writingId + "/comments/"
    lastUpdatedTimestamp = commentContainer.find('.new_comment input[name="last_updated_timestamp"]').val()

    if commentContainer.isDisplayNone()
      $.ajax(
        url: url
        type: "get"
        data:
          last_updated_timestamp: lastUpdatedTimestamp
        dataType: "script"
      ).done () ->
        commentContainer.show()

    else
      commentContainer.hide()

  $(".comment_list").click (event) ->
    target = $(event.target)
    getContainer         = -> target.closest(".comment")
    writingId            = -> target.closest(".writing").attr("id").slice(8)
    commentId            = -> container.attr("id").slice(8)
    isAdmin              = -> target.closest(".menu").data('user')
    content              = -> container.find(".content").html()
    lastUpdatedTimestamp = -> target.closest(".comments").find("form.new_comment input#last_updated_timestamp").val()

    if target.is('.comment .menu .edit')
      container = getContainer()

      if container.find(".content").isDisplayNone()
        container.find(".content").show()
        container.find(".edit_comment").hide()
      else
        container.find(".content").hide()
        if container.find(".edit_comment").exists()
          container.find(".edit_comment").show()
        else
          container.append privlock.editCommentForm(writingId(), commentId(), isAdmin(), lastUpdatedTimestamp(), content())

      # make toggle display function

    else if target.is('.comment .menu .delete')
      container = getContainer()

      if container.find(".delete_comment").exists()
        if container.find(".delete_comment").isDisplayNone()
          container.find(".delete_comment").show()
        else
          container.find(".delete_comment").hide()
      else
        container.find(".menu").append privlock.deleteCommentForm(writingId(), commentId(), isAdmin(), lastUpdatedTimestamp())


$(document).ready(privlock.onReadyDocument)
$(document).on('page:load', privlock.onReadyDocument)
