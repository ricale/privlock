# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

#= require application
#= require hmd
#= require hmd.ricaleinline

privlock.displayAlert = (targetSelector, message, fadeOutSeconds) ->
  alertSelector  = targetSelector + " .alert"
  fadeOutSeconds = fadeOutSeconds or 2

  if $(alertSelector).exists()
    $(alertSelector).text(message).show()
  else
    $(targetSelector).prepend "<div class='alert'>" + message + "</div>"
  $(alertSelector).fadeOut fadeOutSeconds * 1000

privlock.highlightElement = (targetSelector, color, periodSeconds) ->
  color         = color or '#FFC'
  periodSeconds = periodSeconds or 3

  $(targetSelector).css "backgroundColor", color
  $(targetSelector).stop().animate
    backgroundColor: "#FFF"
  , periodSeconds * 1000

privlock.editCommentForm = (writingId, commentId, isAdmin, lastUpdatedTimestamp, content) ->
  formHTML = "<form class='edit_comment' method='post' data-remote='true'
                action='/writings/" + writingId + "/comments/" + commentId + "' accept-charset='UTF-8'>
                <div style='margin:0;padding:0;display:inline'>
                  <input type='hidden' value='✓' name='utf8'>
                  <input type='hidden' value='patch' name='_method'>
                </div>"

  unless isAdmin
    formHTML  += "<div class='field'>
                    <label for='comment_password'>password (*)</label>
                    <input id='comment_password' type='password' name='comment[password]'>
                  </div>"

  formHTML + "<input id='last_updated_timestamp' type='hidden' value='" + lastUpdatedTimestamp + "' name='last_updated_timestamp'>
              <div class='field'>
                <textarea id='comment_content' name='comment[content]'>" + content + "</textarea>
              </div>
              <div class='actions'>
                <input type='submit' value='Update' name='commit'>
              </div>
            </form>"

privlock.deleteCommentForm = (writingId, commentId, isAdmin, lastUpdatedTimestamp) ->
  formHTML = "<form class='delete_comment' method='post' data-remote='true'
                action='/writings/" + writingId + "/comments/" + commentId + "' accept-charset='UTF-8'>
                <div style='margin:0;padding:0;display:inline'>
                  <input type='hidden' value='✓' name='utf8'>
                  <input type='hidden' value='delete' name='_method'>
                </div>"

  if isAdmin
    formHTML  += "<div>Are you sure?</div>"
  else
    formHTML  += "<label for='comment_password'>password</label>
                  <input id='comment_password' type='password' name='comment[password]'>"

  formHTML + "<input id='last_updated_timestamp' type='hidden' value='" + lastUpdatedTimestamp + "' name='last_updated_timestamp'>
              <input type='submit' value='Delete' name='commit'>
            </form>"


privlock.onReadyDocument = ->

  $(".comments_count").click (event) ->
    commentContainer = $(this).closest('.writing').find('.comments')
    writingId = $(this).closest(".writing").attr("id").slice(8)
    url       = "/writings/" + writingId + "/comments/"
    lastUpdatedTimestamp = commentContainer.find('.new_comment input[name="last_updated_timestamp"]').val()

    if commentContainer.isDisplayNone()
      $.ajax(
        url: url
        type: "get"
        data:
          last_updated_timestamp: lastUpdatedTimestamp
        dataType: "script"
      ).done () ->
        commentContainer.show()

    else
      commentContainer.hide()

  $(".comment_list").click (event) ->
    target = $(event.target)
    getContainer         = -> target.closest(".comment")
    writingId            = -> target.closest(".writing").attr("id").slice(8)
    commentId            = -> container.attr("id").slice(8)
    isAdmin              = -> target.closest(".menu").data('user')
    content              = -> container.find(".content").html()
    lastUpdatedTimestamp = -> target.closest(".comments").find("form.new_comment input#last_updated_timestamp").val()

    if target.is('.comment .menu .edit')
      container = getContainer()

      if container.find(".content").isDisplayNone()
        container.find(".content").show()
        container.find(".edit_comment").hide()
      else
        container.find(".content").hide()
        if container.find(".edit_comment").exists()
          container.find(".edit_comment").show()
        else
          container.append privlock.editCommentForm(writingId(), commentId(), isAdmin(), lastUpdatedTimestamp(), content())

      # make toggle display function

    else if target.is('.comment .menu .delete')
      container = getContainer()

      if container.find(".delete_comment").exists()
        if container.find(".delete_comment").isDisplayNone()
          container.find(".delete_comment").show()
        else
          container.find(".delete_comment").hide()
      else
        container.find(".menu").append privlock.deleteCommentForm(writingId(), commentId(), isAdmin(), lastUpdatedTimestamp())


$(document).ready(privlock.onReadyDocument)
$(document).on('page:load', privlock.onReadyDocument)